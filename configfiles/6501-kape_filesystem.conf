# SOF-ELKÂ® Configuration File
# Author: Phil Hagen
# Email: phil@lewestech.com
#
# (C)2019 Lewes Technology Consulting, LLC
#
# This conf file accepts logs from the KAPE forensic tool

filter {
  if [type] == "kape_filesystem" and "json" not in [tags] {
    mutate {
      # create two "timestamp" fields with the MACBs in subfields
      # create a KAPE-specific bit field
      # promote the remaining fields of interest out of the [raw] placeholder
      # remove the [raw] placeholder

      rename => {
        "[raw][LastRecordChange0x10]" => "[stdinfo][lastrecorchange]"
        "[raw][LastModified0x10]" => "[stdinfo][lastmodified]"
        "[raw][LastAccess0x10]" => "[stdinfo][lastaccess]"
        "[raw][Created0x10]" => "[stdinfo][created]"

        "[raw][LastRecordChange0x30]" => "[FILENAME][lastrecordchange]"
        "[raw][LastModified0x30]" => "[FILENAME][lastmodified]"
        "[raw][LastAccess0x30]" => "[FILENAME][lastaccess]"
        "[raw][Created0x30]" => "[FILENAME][created]"

        "[raw][InUse]" => "[kapefileinfo][inuse]"
        "[raw][IsDirectory]" => "[kapefileinfo][isdirectory]"
        "[raw][HasAds]" => "[kapefileinfo][hasads]"
        "[raw][IsAds]" => "[kapefileinfo][isads]"
        "[raw][Timestomped]" => "[kapefileinfo][yimestomped]"
        "[raw][Copied]" => "[kapefileinfo][copied]"

        "[raw][SiFlags]" => "siflags"
        "[raw][EntryNumber]" => "entrynumber"
        "[raw][SequenceNumber]" => "sequencenumber"
        "[raw][ParentEntryNumber]" => "parententrynumber"
        "[raw][ParentSequenceNumber]" => "parentsequencenumber"
        "[raw][ParentPath]" => "parentpath"
        "[raw][FileName]" => "filename"
        "[raw][Extension]" => "extension"
        "[raw][FileSize]" => "filesize"
        "[raw][ReferenceCount]" => "referencecount"
        "[raw][ReparseTarget]" => "reparsetarget"
        "[raw][NameType]" => "nametype"
        "[raw][UpdateSequenceNumber]" => "updatesequencenumber"
        "[raw][LogfileSequenceNumber]" => "logfilesequencnumber"
        "[raw][SecurityId]" => "securityid"
        "[raw][ObjectIdFileDroid]" => "objectIdfiledroid"
        "[raw][LoggedUtilStream]" => "loggedutilstream"
        "[raw][ZoneIdContents]" => "zoneidcontents"
      }
      remove_field => [ "raw" ]
    }

    # use the stdinfo LastModified time for @timestamp
    date {
      match => [ "[stdinfo][lastmodified]", "ISO8601" ]
    }

    # convert all stdinfo timestamps to date/time types
    date {
      match => [ "[stdinfo][lastrecordchange]", "ISO8601" ]
      target => "[stdinfo][lastrecordchange]"
    }
    date {
      match => [ "[stdinfo][lastmodified]", "ISO8601" ]
      target => "[stdinfo][lastmodified]"
    }
    date {
      match => [ "[stdinfo][lastaccess]", "ISO8601" ]
      target => "[stdinfo][lastaccess]"
    }
    date {
      match => [ "[stdinfo][created]", "ISO8601" ]
      target => "[stdinfo][created]"
    }

    # convert all FILENAME timestamps to date/time types
    date {
      match => [ "[FILENAME][lastrecordchange]", "ISO8601" ]
      target => "[FILENAME][lastrecordchange]"
    }
    date {
      match => [ "[FILENAME][lastmodified]", "ISO8601" ]
      target => "[FILENAME][lastmodified]"
    }
    date {
      match => [ "[FILENAME][lastaccess]", "ISO8601" ]
      target => "[FILENAME][lastaccess]"
    }
    date {
      match => [ "[FILENAME][created]", "ISO8601" ]
      target => "[FILENAME][created]"
    }

    # convert SiFlags to true/false array
    ruby {
      path => "/usr/local/sof-elk/supporting-scripts/ntfs_flags_to_array.rb"
      script_params => { "source_field" => "siflags" }
    }
  }
}