# SOF-ELKÂ® Configuration File
# Author: Phil Hagen
# Email: phil@lewestech.com
#
# (C)2019 Lewes Technology Consulting, LLC
#
# This conf file accepts logs from the KAPE forensic tool

filter {
  if [type] == "kape_filesystem" {
    mutate {
      # create two "timestamp" fields with the MACBs in subfields
      rename => {
        "LastRecordChange0x10" => "[STDINFO][LastRecordChange]"
        "LastModified0x10" => "[STDINFO][LastModified]"
        "LastAccess0x10" => "[STDINFO][LastAccess]"
        "Created0x10" => "[STDINFO][Created]"

        "LastRecordChange0x30" => "[FILENAME][LastRecordChange]"
        "LastModified0x30" => "[FILENAME][LastModified]"
        "LastAccess0x30" => "[FILENAME][LastAccess]"
        "Created0x30" => "[FILENAME][Created]"
      }
    }

    # strip timestamps to just their integers
    mutate {
      gsub => [ "[STDINFO][LastRecordChange]", "\/Date\((\d+)\)\/", "\1" ]
      gsub => [ "[STDINFO][LastModified]", "\/Date\((\d+)\)\/", "\1" ]
      gsub => [ "[STDINFO][LastAccess]", "\/Date\((\d+)\)\/", "\1" ]
      gsub => [ "[STDINFO][Created]", "\/Date\((\d+)\)\/", "\1" ]

      gsub => [ "[FILENAME][LastRecordChange]", "\/Date\((\d+)\)\/", "\1" ]
      gsub => [ "[FILENAME][LastModified]", "\/Date\((\d+)\)\/", "\1" ]
      gsub => [ "[FILENAME][LastAccess]", "\/Date\((\d+)\)\/", "\1" ]
      gsub => [ "[FILENAME][Created]", "\/Date\((\d+)\)\/", "\1" ]
    }

    # use the STDINFO LastModified time for @timestamp
    date {
      match => [ "[STDINFO][LastModified]", "UNIX_MS" ]
    }

    # convert all STDINFO timestamps to date/time types
    date {
      match => [ "[STDINFO][LastRecordChange]", "UNIX_MS" ]
      target => "[STDINFO][LastRecordChange]"
    }
    date {
      match => [ "[STDINFO][LastModified]", "UNIX_MS" ]
      target => "[STDINFO][LastModified]"
    }
    date {
      match => [ "[STDINFO][LastAccess]", "UNIX_MS" ]
      target => "[STDINFO][LastAccess]"
    }
    date {
      match => [ "[STDINFO][Created]", "UNIX_MS" ]
      target => "[STDINFO][Created]"
    }

    # convert all FILENAME timestamps to date/time types
    date {
      match => [ "[FILENAME][LastRecordChange]", "UNIX_MS" ]
      target => "[FILENAME][LastRecordChange]"
    }
    date {
      match => [ "[FILENAME][LastModified]", "UNIX_MS" ]
      target => "[FILENAME][LastModified]"
    }
    date {
      match => [ "[FILENAME][LastAccess]", "UNIX_MS" ]
      target => "[FILENAME][LastAccess]"
    }
    date {
      match => [ "[FILENAME][Created]", "UNIX_MS" ]
      target => "[FILENAME][Created]"
    }

    # convert SiFlags to true/false array
    ruby {
      path => "/usr/local/sof-elk/supporting-scripts/ntfs_flags_to_array.rb"
      script_params => { "source_field" => "SiFlags" }
    }

    # Create KAPE-specific flag array
    mutate {
      rename => {
        "InUse" => "[KAPEFileInfo][InUse]"
        "IsDirectory" => "[KAPEFileInfo][IsDirectory]"
        "HasAds" => "[KAPEFileInfo][HasAds]"
        "IsAds" => "[KAPEFileInfo][IsAds]"
        "Timestomped" => "[KAPEFileInfo][Timestomped]"
        "Copied" => "[KAPEFileInfo][Copied]"
      }
    }

    # clean up by removing unneeded fields
    mutate {
      remove_field => [ "uSecZeros" , "FnAttributeId", "OtherAttributeId", "message" ]
    }
  }
}
